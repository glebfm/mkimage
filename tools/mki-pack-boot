#!/bin/ash -efu
#
# mki-pack-boot
#
# This file is part of mkimage
# Copyright (C) 2007-2023  Alexey Gladkov <gladkov.alexey@gmail.com>
# Copyright (C) 2023  Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
#
# This file is covered by the GNU General Public License,
# which should be included with mkimage as the file COPYING.
#

# shellcheck source=tools/mki-sh-functions
. "${0%/*}"/mki-sh-functions

verbose "has started executing."

BOOT_TYPE="${BOOT_TYPE:?boot type required}"

outname="${MKI_OUTNAME:-outname}"
outname="${outname##*/}"

set -- ${BOOT_TYPE:-}

boot_isolinux=
boot_pxelinux=
boot_syslinux=
boot_efiboot=
boot_ieee1275boot=
boot_grubaa64boot=
boot_grubpcboot=
for b; do
	case "$b" in
		isolinux) boot_isolinux=1 ;;
		pxelinux) boot_pxelinux=1 ;;
		syslinux) boot_syslinux=1 ;;
		efiboot) boot_efiboot=1 ;;
		ieee1275boot) boot_ieee1275boot=1 ;;
		grubaa64boot) boot_grubaa64boot=1 ;;
		grubpcboot) boot_grubpcboot=1 ;;
		*) fatal "Unknown boot type" ;;
	esac
done

if [ -n "${EFI_BOOTLOADER:-}" ] && [ -z "$boot_grubaa64boot" ] && [ -z "$boot_efiboot" ]; then
	boot_efiboot=1
	set -- "$@" efiboot
fi

[ "$#" -gt 0 ] ||
	fatal "Boot type required"

[ -d "$chroot" ] ||
	fatal "$dir: not look like a work directory of hasher."

[ -z "${PROPAGATOR_MAR_MODULES:-}" ] ||
	mki-build-propagator

for b; do
	mki-copy-"$b"
done

if [ -n "$boot_isolinux" ]; then
	exec mki-pack-isoboot
fi

if [ -n "$boot_grubpcboot" ]; then
	exec mki-pack-grubpc-isoboot
fi

if [ -n "$boot_ieee1275boot" ]; then
	exec mki-pack-isodata
fi

if [ -n "$boot_grubaa64boot" ]; then
	exec mki-pack-efionly-isoboot
fi

# The hybrid boot modes, grubpcboot (grub-pc + EFI) and isolinux
# (isolinux + EFI), are supposed to kick in earlier.  As a result, we are
# opting to use the efionly boot mode at this point.
if [ -n "$boot_efiboot" ]; then
	exec mki-pack-efionly-isoboot
fi

exec mki-pack-data
