#!/bin/sh -efu
# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (C) 2007-2023  Alexey Gladkov <gladkov.alexey@gmail.com>

# shellcheck disable=SC2034
pkgbox="${PKGBOX:?aptbox required}"
target="${TARGET:+--target="$TARGET"}"
with_qemu="${HSH_USE_QEMU:+--with-qemu="$HSH_USE_QEMU"}"
apt_config="${HSH_APT_CONFIG:+--apt-config="$HSH_APT_CONFIG"}"
apt_prefix="${HSH_APT_PREFIX:+--apt-prefix="$HSH_APT_PREFIX"}"

hsh_initroot() {
	local wdir="$1"; shift

	env -i PATH="$PATH" \
	hsh \
		--initroot \
		--without-stuff \
		--pkg-build-list='' \
		--save-fakeroot \
		${verbose-} ${quiet-} ${target-} ${with_qemu-} ${apt_config-} ${apt_prefix-} \
		${HSH_LANGS:+--install-langs="$HSH_LANGS"} \
		${HSH_NUMBER:+--number="$HSH_NUMBER"} \
		${HSH_EXCLUDE_DOCS:+--excludedocs} \
		${HSH_CACHEDIR:+--cache-dir="$HSH_CACHEDIR"} \
		${IMAGE_INIT_LIST:+--pkg-init-list="$IMAGE_INIT_LIST"} \
		"$@" \
		-- "$wdir" ||
	fatal "$wdir: unable to make initial chroot: rc=$?"

	local pkgs="${PACKAGES_REQUIRED_INITROOT:-}"
	if [ -n "$pkgs" ]; then
		env -i PATH="$PATH" \
		hsh-install \
			${verbose-} ${quiet-} \
			${HSH_NUMBER:+--number="$HSH_NUMBER"} \
			${HSH_EXCLUDE_DOCS:+--excludedocs} \
			-- "$wdir" $pkgs ||
		fatal "$wdir: unable to install packages: rc=$?"
	fi

	# Create missing objects in hasher root's /dev.
	[ -d "$wdir"/chroot/dev/shm ] ||
		install -d -m1777 "$wdir"/chroot/dev/shm
	[ -d "$wdir"/chroot/dev/pts ] ||
		install -d -m755 "$wdir"/chroot/dev/pts
	[ -L "$wdir"/chroot/dev/fd ] ||
		ln -s /proc/self/fd "$wdir"/chroot/dev/fd
	[ -L "$wdir"/chroot/dev/stdin ] ||
		ln -s /proc/self/fd/0 "$wdir"/chroot/dev/stdin
	[ -L "$wdir"/chroot/dev/stdout ] ||
		ln -s /proc/self/fd/1 "$wdir"/chroot/dev/stdout
	[ -L "$wdir"/chroot/dev/stderr ] ||
		ln -s /proc/self/fd/2 "$wdir"/chroot/dev/stderr

	printf "%s\n" \
		"666 /dev/null c 1 3" \
		"666 /dev/zero c 1 5" \
		"666 /dev/full c 1 7" \
		"644 /dev/random c 1 8" \
		"644 /dev/urandom c 1 9" \
		"600 /dev/console c 5 1" \
		"600 /dev/tty0 c 4 0" \
		"666 /dev/tty c 5 0" \
		"666 /dev/ptmx c 5 2" |
	while read -r mode name type major minor ; do
		[ ! -e "$wdir/chroot/$name" ] ||
			continue
		mki-fakedev \
			$verbose $quiet \
			-o root \
			-m "$mode" \
			-- "$wdir" "$name" "$type" "$major" "$minor" ||
		fatal 'Failed to create essential devices.'
	done

	if [ ! -e "$wdir"/chroot/dev/pts/ptmx ]; then
		mv "$wdir"/chroot/dev/ptmx "$wdir"/chroot/dev/pts/ptmx
		ln -s pts/ptmx "$wdir"/chroot/dev/ptmx
	fi

	rm -rf -- "$wdir/repo" "$wdir/chroot/.out"
}

hsh_initroot_image() {
	hsh_initroot "$1" \
		${MKI_IMAGE_INITROOT_PREDB:+--predb-prog="$MKI_IMAGE_INITROOT_PREDB"}
}
