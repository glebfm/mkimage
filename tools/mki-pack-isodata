#!/bin/sh -efu
# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (C) 2007-2023  Alexey Gladkov <gladkov.alexey@gmail.com>

# shellcheck source=tools/mki-sh-functions
. "${0%/*}"/mki-sh-functions

verbose "has started executing."

pkgs="${PACKAGES_REQUIRED_PACK_ISODATA:-}"

outname="${MKI_OUTNAME:-outname}"
outname="${outname##*/}"

imgsubdir="${MKI_IMAGESUBDIR:-}"
imgsubdir="${imgsubdir#/}"

[ "$MKI_OUTNAME" = "${MKI_OUTNAME##*/}" ] ||
	outdir="$(readlink -ev "${MKI_OUTNAME%/*}")"

[ -d "$chroot" ] ||
	fatal "$dir: not look like a work directory of hasher."

mki-install $pkgs ||
	fatal "failed to install packages: $pkgs."

run_chrooted "$chroot" >"$outdir/$outname" <<EOF
#!/bin/sh -efu
cd /tmp
cat > .mkisofsrc <<-__EOF__
	APPI=${ISODATA_APPI:-}
	COPY=${ISODATA_COPY:-}
	ABST=${ISODATA_ABST:-}
	BIBL=${ISODATA_BIBL:-}
	PREP=${ISODATA_PREP:-}
	PUBL=${ISODATA_PUBL:-}
	SYSI=${ISODATA_SYSI:-}
	VOLI=${ISODATA_VOLI:-}
	VOLS=${ISODATA_VOLS:-}
__EOF__

if [ -n "${MKI_EXCLUDE:-}" ]; then
	for d in ${MKI_EXCLUDE:-}; do
		printf '%s\\n' "\$d"
	done
fi > .exclude

imgdir=/.image
[ -z "$imgsubdir" ] || [ ! -d "/.image/$imgsubdir" ] ||
	imgdir="/.image/$imgsubdir"

uuid_iso=
if [ -n "${UUID_ISO:-}" ]; then
	uuid_iso="-volume_date uuid $(echo ${UUID_ISO:-} | sed 's/-//g')"
fi

rc=0
xorriso -follow param \
	-read_mkisofsrc \
	\$uuid_iso \
	-as mkisofs \
	$verbose -J -l -r -joliet-long \
	-exclude-list /tmp/.exclude \
	"\$imgdir/" || rc=\$?

rm -f -- .mkisofsrc .exclude
exit \$rc
EOF
