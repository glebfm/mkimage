# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (C) 2007-2009  Alexey Gladkov <gladkov.alexey@gmail.com>

INCLUDED_TARGETS_MK = 1

include $(CONFIGDIR)/tools.mk
include $(CONFIGDIR)/actions.mk

.PHONY: $(SUBDIRS)
.EXPORT_ALL_VARIABLES:
.NOTPARALLEL:

all: $(SUBDIRS)

__profile_internal_rule:
	@if [ -n "$(PROFILE)" ]; then \
	    $(CHROOT_INVALIDATE_CACHE) mki; \
	    [ ! -d "$(WORKDIR)" ] || $(CHROOT_CLEAN); \
	fi

prepare: $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(MAKE_WORKDIR)

prepare-workdir: prepare $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    $(CHROOT_PREPARE) && \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

prepare-image-workdir: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    $(CHROOT_IMAGE_PREPARE) && \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

run-scripts: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    if ! $(CHROOT_SCRIPTS); then \
		$(CHROOT_INVALIDATE_CACHE) mki; \
		exit 1; \
	    fi; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

run-image-scripts: prepare-image-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    if ! $(CHROOT_IMAGE_SCRIPTS); then \
		$(CHROOT_INVALIDATE_CACHE) mki; \
		exit 1; \
	    fi; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

run-image-patches: prepare-image-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    if ! $(CHROOT_IMAGE_PATCHES); then \
	        $(CHROOT_INVALIDATE_CACHE) mki; \
	        exit 1; \
	    fi; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

build-propagator: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_BUILD_PROPAGATOR)

copy-isolinux: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_ISOLINUX)

copy-efiboot: prepare-workdir $(SUBDIRS)
	@echo "mkimage: WARNING: '$@' is deprecated!"
	@echo "mkimage: WARNING: use copy-grub-efi instead"
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_EFIBOOT)

copy-grub-efi: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_GRUB_EFI)

copy-pxelinux: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_PXELINUX)

copy-syslinux: prepare-workdir $(SUBDIRS)
	@$(CHROOT_COPY_SYSLINUX)

copy-ieee1275boot: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_IEEE1275BOOT)

copy-grubaa64boot: prepare-workdir $(SUBDIRS)
	@echo "mkimage: WARNING: '$@' is deprecated!"
	@echo "mkimage: WARNING: use copy-grub-efi instead"
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_GRUBAA64BOOT)

copy-grubpcboot: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_GRUBPCBOOT)

copy-e2k-boot: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_COPY_E2KBOOT)

copy-tree: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    $(CHROOT_COPY_TREE) && \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

copy-subdirs: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if [ -n "$(SUBDIRS)" ] && ! $(CHROOT_CACHE) check $@; then \
	    $(CHROOT_COPY_SUBDIRS) && \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

split: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHROOT_SPLIT)

copy-packages: prepare-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    if ! $(CHROOT_IMAGE_PKGS) copy; then \
		$(CHROOT_INVALIDATE_CACHE) mki/$@; \
		exit 1; \
	    fi; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

build-image: prepare-image-workdir $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@if ! $(CHROOT_CACHE) check $@; then \
	    if ! $(CHROOT_IMAGE_PKGS) install; then \
		$(CHROOT_INVALIDATE_CACHE) mki/$@; \
		exit 1; \
	    fi; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

pack-image: prepare-workdir copy-subdirs $(SUBDIRS)
	@echo "mkimage: Processing '$@' ..."
	@$(CHECK_OBSOLETE) $@; \
	if ! $(CHROOT_CACHE) check $@; then \
	    $(CHROOT_PACK_RESULTS) || exit 1; \
	    $(CHROOT_CACHE) build $@ || exit 1; \
	fi

reset-cache:
	@if [ -n "$(TARGET_STAGES)" ]; then \
		stages="$$(printf '%s' "$(TARGET_STAGES)" |tr '[,:]' ' ')"; \
		echo "mkimage: Processing '$@' for $$stages ..."; \
		for t in $$stages; do \
			$(CHROOT_INVALIDATE_CACHE) "mki/$$t"; \
		done; \
	fi

clean-current:
	@echo "mkimage: Processing '$@' ..."
	@[ ! -d "$(CACHEDIR)" ] || $(CHROOT_INVALIDATE_CACHE) mki;
	@[ ! -h "$(WORKDIR)" ] || \
		readlink -eqs -- "$(WORKDIR)" >/dev/null || \
		rm -f -- "$(WORKDIR)";
	@[ ! -d "$(WORKDIR)" ]  || $(CHROOT_CLEAN);

clean: clean-current $(SUBDIRS)

distclean-current: clean-current
	@echo "mkimage: Processing '$@' ..."
	@[ ! -h $(WORKDIR) ] || rm -rf -- $$(readlink -ev -- $(WORKDIR));
	@rm -rf -- $(WORKDIR) $(OUTDIR) $(CACHEDIR) $(PKGBOX)

distclean: distclean-current $(SUBDIRS)

env-current:
	@printenv |sort

env: env-current $(SUBDIRS)

$(SUBDIRS):
	$(RUN_MAKE) "$@" $(MAKE) $(MFLAGS) $(MAKECMDGOALS) SUBPROFILE=1
